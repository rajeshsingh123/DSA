class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
           int [] vis=new int[V];
       for(int i=0;i<V;i++){
           if(vis[i]==0){
               vis[i]=1;
              boolean f= dfs(adj,vis,i,-1);
            //  vis[i]=0;
              if(f==true){
                  return f;
              }
           }
       }
       return false;
        
        
        
    }
     public static boolean dfs(ArrayList<ArrayList<Integer>> adj,int [] vis,int vtx,int p){
        
        
        for(int nbr:adj.get(vtx)){
            if(vis[nbr]==0){
                vis[nbr]=1;
              boolean f=dfs(adj,vis,nbr,vtx);
              if(f==true){
                  return f;
              }
             // vis[nbr]=0;
            }else if(nbr!=p && vis[nbr]==1){
                return true;
            }
        }
        
        return false;
        
        
    }
}
