
class Solution {
    public static int maxProfit(int n, int[] prices) {
         int mpist=0;
        int leastsf=prices[0];
        int [] dp1= new int [prices.length];
        for(int i=1;i<prices.length;i++){
            if(prices[i]<leastsf){
                leastsf=prices[i];
            }
            mpist=prices[i]-leastsf;
            if(mpist>dp1[i-1]){
                dp1[i]=mpist;
            }else{
                dp1[i]=dp1[i-1];
            }
        }
        int mpibt=0;
        int maxat=prices[prices.length-1];
        int dp2[]=new int [dp1.length];
        for(int i=prices.length-2;i>=0;i--){
            if(prices[i]>maxat){
                maxat=prices[i];
            }
          mpibt=maxat-prices[i];
          if(mpibt>dp2[i+1]){
              dp2[i]=mpibt;
          }else{
              dp2[i]=dp2[i+1];
          }
        }
        int op=0;
        for(int i=0;i<prices.length;i++){
            if(dp1[i]+dp2[i]>op){
                op=dp1[i]+dp2[i];
            }
        }
        return op;       
    }
}
