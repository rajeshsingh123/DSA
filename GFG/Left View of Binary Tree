class Tree
{
    //Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root)
    {
      // Your code here
     /* Queue<Node> mq=new ArrayDeque<>();
      Queue<Node> hq=new ArrayDeque<>();
      ArrayList<Integer> res =new ArrayList<Integer>();
      if(root==null){
          return res;
      }
      res.add(root.data);
      mq.add(root);
      while(mq.size()>0){
          Node rem=mq.remove();
          if(rem.left!=null){
              hq.add(root.left);
          }
          if(rem.right!=null){
              mq.add(root.right);
          }
          if(mq.size()==0){
              if(hq.size()>0){
                  res.add(hq.peek().data);
                  mq=hq;
                  hq=new ArrayDeque<>();
              }
          }
      }
     return res; 
     */
           ArrayList<Integer> res =new ArrayList<Integer>();
        preorder(root,0,res);
        return res;
    }
    void preorder(Node root,int level,ArrayList<Integer> res){
        if(root==null){
            return;
        }
        if(level==res.size()){
            res.add(root.data);
        }
        preorder(root.left,level+1,res);
        preorder(root.right,level+1,res);
        
    }
}
