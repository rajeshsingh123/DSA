class Solution{
    static int palindromicPartition(String s)
    {
               boolean dp[][]=new boolean [s.length()][s.length()];
       for(int gap=0;gap<dp.length;gap++){
          for(int i=0, j=gap;j<dp.length;j++,i++){
      if(gap==0){
          dp[i][j]=true;
      }else if(gap==1){
         dp[i][j]=s.charAt(i)==s.charAt(j);
      }else{
          if(s.charAt(i)==s.charAt(j)&&dp[i+1][j-1]==true){
              dp[i][j]=true;
          }
      }
   } 
 }
  
  int dp1[]=new int[dp.length];
  for(int j=1;j<dp1.length;j++){
      if(dp[0][j]==true){
          dp1[j]=0;
      }else{
        int min=Integer.MAX_VALUE;
        for(int i=j;i>=1;i--){
            if(dp[i][j]){
                if(dp1[i-1]<min){
                    min=dp1[i-1];
                }
            }
        }
        dp1[j]=min+1;
      }
  }
        return dp1[dp.length-1];
  }
   }

    
