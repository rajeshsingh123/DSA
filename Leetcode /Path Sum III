
class Solution {
     static int count=0;
    public int pathSum(TreeNode root, int targetSum) {
        count=0;
        if(root==null){
            return 0;
        }
        
        List<Integer> list=new ArrayList<>();
        list.add(root.val);
        if(root.val==targetSum){
            count++;
        }
        fun(root,targetSum,list);
       return count;
        
    }


 public void fun(TreeNode root,int targetSum, List<Integer> list){
       
        if(root.left==null && root.right==null){
      
        return;
          
        }
      if(root.left!=null){
          list.add(root.left.val);
          long sum=0;
         for(int i=list.size()-1; i>=0;i--){
                sum+=list.get(i);

                if(sum==targetSum){ 
            count++;
           }
            } 
          fun(root.left,targetSum,list);
         
          list.remove(list.size()-1);
      }
        if(root.right!=null){
          list.add(root.right.val);
          long sum=0;
           for(int i=list.size()-1; i>=0;i--){
                sum+=list.get(i);
                if(sum==targetSum){ 
            count++;
           }
            } 
          fun(root.right,targetSum,list);
          
          list.remove(list.size()-1);
      }
    }


}
