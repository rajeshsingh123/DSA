/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        int size=0;
        ListNode h1=head;
        while(h1!=null){
            h1=h1.next;
            size++;
        }
        int no=size/k;
        int rem=size%k;
        ListNode ans[]=new ListNode[k];
        int a[]=new int[k];
        for(int i=0;i<a.length;i++){
            a[i]=no;
            if(rem!=0){
                a[i]+=1;
                rem--;
            }
        }
        ListNode h2=head;
        for(int i=0;i<a.length;i++){
            int val=a[i];
            if(val!=0){
                ListNode pr=head;
                while(val!=0 && head!=null){
                    pr=head;
                    head=head.next;
                    val--;
                }
                head=pr;
                ListNode nbr=null;
                if(head!=null){
                nbr=head.next;
                head.next=null;
                }
                ans[i]=h2;
                h2=nbr;
                head=nbr;
            }
        }
    return ans;
    }
}
